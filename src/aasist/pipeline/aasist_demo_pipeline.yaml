# PIPELINE DEFINITION
# Name: aasist-demo-pipeline
# Description: Demo pipeline for AASIST anti-spoofing with PVC data sharing
# Inputs:
#    config: dict [Default: {}]
#    device: str [Default: 'cuda']
components:
  comp-createpvc:
    executorLabel: exec-createpvc
    inputDefinitions:
      parameters:
        access_modes:
          description: 'AccessModes to request for the provisioned PVC. May

            be one or more of ``''ReadWriteOnce''``, ``''ReadOnlyMany''``, ``''ReadWriteMany''``,
            or

            ``''ReadWriteOncePod''``. Corresponds to `PersistentVolumeClaim.spec.accessModes
            <https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes>`_.'
          parameterType: LIST
        annotations:
          description: Annotations for the PVC's metadata. Corresponds to `PersistentVolumeClaim.metadata.annotations
            <https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#PersistentVolumeClaim>`_.
          isOptional: true
          parameterType: STRUCT
        pvc_name:
          description: 'Name of the PVC. Corresponds to `PersistentVolumeClaim.metadata.name
            <https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#PersistentVolumeClaim>`_.
            Only one of ``pvc_name`` and ``pvc_name_suffix`` can

            be provided.'
          isOptional: true
          parameterType: STRING
        pvc_name_suffix:
          description: 'Prefix to use for a dynamically generated name, which

            will take the form ``<argo-workflow-name>-<pvc_name_suffix>``. Only one

            of ``pvc_name`` and ``pvc_name_suffix`` can be provided.'
          isOptional: true
          parameterType: STRING
        size:
          description: The size of storage requested by the PVC that will be provisioned.
            For example, ``'5Gi'``. Corresponds to `PersistentVolumeClaim.spec.resources.requests.storage
            <https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#PersistentVolumeClaimSpec>`_.
          parameterType: STRING
        storage_class_name:
          defaultValue: ''
          description: 'Name of StorageClass from which to provision the PV

            to back the PVC. ``None`` indicates to use the cluster''s default

            storage_class_name. Set to ``''''`` for a statically specified PVC.'
          isOptional: true
          parameterType: STRING
        volume_name:
          description: 'Pre-existing PersistentVolume that should back the

            provisioned PersistentVolumeClaim. Used for statically

            specified PV only. Corresponds to `PersistentVolumeClaim.spec.volumeName
            <https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#PersistentVolumeClaimSpec>`_.'
          isOptional: true
          parameterType: STRING
    outputDefinitions:
      parameters:
        name:
          parameterType: STRING
  comp-download-dataset:
    executorLabel: exec-download-dataset
    inputDefinitions:
      parameters:
        dataset_url:
          description: URL to download the dataset from
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-extract-dataset:
    executorLabel: exec-extract-dataset
    inputDefinitions:
      parameters:
        dataset_path:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-createpvc:
      container:
        image: argostub/createpvc
    exec-download-dataset:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - download_dataset
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'requests==2.32.4'\
          \ 'python-dotenv==1.1.1' 'tqdm==4.67.1' && \"$0\" \"$@\"\n"
        - python3
        - -m
        - kfp.dsl.executor_main
        image: 10.5.110.131:32000/aasist-project/download-dataset:v1.0.0-004
    exec-extract-dataset:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - extract_dataset
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'python-dotenv==1.1.1'\
          \ && \"$0\" \"$@\"\n"
        - python3
        - -m
        - kfp.dsl.executor_main
        image: 10.5.110.131:32000/aasist-project/extract-dataset:v1.0.0-007
pipelineInfo:
  description: Demo pipeline for AASIST anti-spoofing with PVC data sharing
  name: aasist-demo-pipeline
root:
  dag:
    tasks:
      createpvc:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-createpvc
        inputs:
          parameters:
            access_modes:
              runtimeValue:
                constant:
                - ReadWriteMany
            pvc_name:
              runtimeValue:
                constant: aasist-pvc
            size:
              runtimeValue:
                constant: 20Gi
            storage_class_name:
              runtimeValue:
                constant: microk8s-hostpath
        taskInfo:
          name: createpvc
      download-dataset:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-download-dataset
        dependentTasks:
        - createpvc
        inputs:
          parameters:
            dataset_url:
              runtimeValue:
                constant: http://10.5.110.131:8080/test.zip
        taskInfo:
          name: Download Dataset
      extract-dataset:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-extract-dataset
        dependentTasks:
        - createpvc
        - download-dataset
        inputs:
          parameters:
            dataset_path:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: download-dataset
        taskInfo:
          name: Extract Dataset
  inputDefinitions:
    parameters:
      config:
        defaultValue: {}
        isOptional: true
        parameterType: STRUCT
      device:
        defaultValue: cuda
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.13.0
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-download-dataset:
          pvcMount:
          - mountPath: /data
            pvcNameParameter:
              taskOutputParameter:
                outputParameterKey: name
                producerTask: createpvc
            taskOutputParameter:
              outputParameterKey: name
              producerTask: createpvc
        exec-extract-dataset:
          pvcMount:
          - mountPath: /data
            pvcNameParameter:
              taskOutputParameter:
                outputParameterKey: name
                producerTask: createpvc
            taskOutputParameter:
              outputParameterKey: name
              producerTask: createpvc
